# coding: utf-8

"""
    HPE Aruba Networking UXI Configuration

    This document outlines the API contracts for HPE Aruba Networking UXI.

    The version of the OpenAPI document: 6.6.0
    Contact: support@capenetworks.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyhpeuxi.models.sensor_patch_response import SensorPatchResponse

class TestSensorPatchResponse(unittest.TestCase):
    """SensorPatchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SensorPatchResponse:
        """Test SensorPatchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SensorPatchResponse`
        """
        model = SensorPatchResponse()
        if include_optional:
            return SensorPatchResponse(
                id = '',
                serial = '',
                name = '',
                model_number = '',
                wifi_mac_address = '',
                ethernet_mac_address = '',
                address_note = '',
                longitude = 1.337,
                latitude = 1.337,
                notes = '',
                pcap_mode = 'light',
                type = 'networking-uxi/sensor'
            )
        else:
            return SensorPatchResponse(
                id = '',
                serial = '',
                name = '',
                model_number = '',
                wifi_mac_address = '',
                ethernet_mac_address = '',
                address_note = '',
                longitude = 1.337,
                latitude = 1.337,
                notes = '',
                pcap_mode = 'light',
                type = 'networking-uxi/sensor',
        )
        """

    def testSensorPatchResponse(self):
        """Test SensorPatchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
